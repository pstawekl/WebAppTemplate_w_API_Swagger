{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * Tank Measurement API\n * API for config.json in tank_measurement\n *\n * The version of the OpenAPI document: 0.1.9\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * \n * @export\n * @interface ModelError\n */\nexport function ModelErrorFromJSON(json) {\n  return ModelErrorFromJSONTyped(json, false);\n}\n_c = ModelErrorFromJSON;\nexport function ModelErrorFromJSONTyped(json, ignoreDiscriminator) {\n  if (json === undefined || json === null) {\n    return json;\n  }\n\n  return {\n    'code': json['code'],\n    'message': json['message']\n  };\n}\n_c2 = ModelErrorFromJSONTyped;\nexport function ModelErrorToJSON(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  return {\n    'code': value.code,\n    'message': value.message\n  };\n}\n_c3 = ModelErrorToJSON;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ModelErrorFromJSON\");\n$RefreshReg$(_c2, \"ModelErrorFromJSONTyped\");\n$RefreshReg$(_c3, \"ModelErrorToJSON\");","map":{"version":3,"names":["ModelErrorFromJSON","json","ModelErrorFromJSONTyped","ignoreDiscriminator","undefined","ModelErrorToJSON","value","code","message"],"sources":["C:/Users/STW/OneDrive/Dokumenty/VSC/projekt na studia/frontend/src/models/ModelError.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Tank Measurement API\n * API for config.json in tank_measurement\n *\n * The version of the OpenAPI document: 0.1.9\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ModelError\n */\nexport interface ModelError {\n    /**\n     * \n     * @type {number}\n     * @memberof ModelError\n     */\n    code: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ModelError\n     */\n    message: string;\n}\n\nexport function ModelErrorFromJSON(json: any): ModelError {\n    return ModelErrorFromJSONTyped(json, false);\n}\n\nexport function ModelErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelError {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'code': json['code'],\n        'message': json['message'],\n    };\n}\n\nexport function ModelErrorToJSON(value?: ModelError | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'code': value.code,\n        'message': value.message,\n    };\n}\n\n"],"mappings":"AAAA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAgBA,OAAO,SAASA,kBAAT,CAA4BC,IAA5B,EAAmD;EACtD,OAAOC,uBAAuB,CAACD,IAAD,EAAO,KAAP,CAA9B;AACH;KAFeD,kB;AAIhB,OAAO,SAASE,uBAAT,CAAiCD,IAAjC,EAA4CE,mBAA5C,EAAsF;EACzF,IAAKF,IAAI,KAAKG,SAAV,IAAyBH,IAAI,KAAK,IAAtC,EAA6C;IACzC,OAAOA,IAAP;EACH;;EACD,OAAO;IAEH,QAAQA,IAAI,CAAC,MAAD,CAFT;IAGH,WAAWA,IAAI,CAAC,SAAD;EAHZ,CAAP;AAKH;MATeC,uB;AAWhB,OAAO,SAASG,gBAAT,CAA0BC,KAA1B,EAA0D;EAC7D,IAAIA,KAAK,KAAKF,SAAd,EAAyB;IACrB,OAAOA,SAAP;EACH;;EACD,IAAIE,KAAK,KAAK,IAAd,EAAoB;IAChB,OAAO,IAAP;EACH;;EACD,OAAO;IAEH,QAAQA,KAAK,CAACC,IAFX;IAGH,WAAWD,KAAK,CAACE;EAHd,CAAP;AAKH;MAZeH,gB"},"metadata":{},"sourceType":"module"}