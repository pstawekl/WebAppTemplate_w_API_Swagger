{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * Tank Measurement API\n * API for config.json in tank_measurement\n *\n * The version of the OpenAPI document: 0.1.9\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport * as runtime from '../runtime';\nimport { InformationFromJSON, ObjectFromJSON, ObjectToJSON } from '../models';\n\n/**\n * \n */\nexport class ObjectApi extends runtime.BaseAPI {\n  /**\n   * Create a Object \n   * Create Object\n   */\n  async createObjectRaw(requestParameters, initOverrides) {\n    const queryParameters = {};\n    const headerParameters = {};\n    headerParameters['Content-Type'] = 'application/json';\n    const response = await this.request({\n      path: `/object`,\n      method: 'POST',\n      mode: 'cors',\n      headers: headerParameters,\n      query: queryParameters,\n      body: ObjectToJSON(requestParameters.object)\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => InformationFromJSON(jsonValue));\n  }\n  /**\n   * Create a Object \n   * Create Object\n   */\n\n\n  async createObject() {\n    let requestParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let initOverrides = arguments.length > 1 ? arguments[1] : undefined;\n    const response = await this.createObjectRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n  /**\n   * Delete Object \n   * Delete Object\n   */\n\n\n  async deleteObjectRaw(requestParameters, initOverrides) {\n    if (requestParameters.objectId === null || requestParameters.objectId === undefined) {\n      throw new runtime.RequiredError('objectId', 'Required parameter requestParameters.objectId was null or undefined when calling deleteObject.');\n    }\n\n    const queryParameters = {};\n    const headerParameters = {};\n    headerParameters['Content-Type'] = 'application/json';\n    const response = await this.request({\n      path: `/object/{object_id}`.replace(`{${\"object_id\"}}`, encodeURIComponent(String(requestParameters.objectId))),\n      method: 'DELETE',\n      headers: headerParameters,\n      query: queryParameters,\n      body: ObjectToJSON(requestParameters.object)\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => InformationFromJSON(jsonValue));\n  }\n  /**\n   * Delete Object\n   * Delete Object\n   */\n\n\n  async deleteObject(requestParameters, initOverrides) {\n    const response = await this.deleteObjectRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n  /**\n   * Edit Object \n   * Edit Object\n   */\n\n\n  async editObjectRaw(requestParameters, initOverrides) {\n    if (requestParameters.objectId === null || requestParameters.objectId === undefined) {\n      throw new runtime.RequiredError('objectId', 'Required parameter requestParameters.objectId was null or undefined when calling editObject.');\n    }\n\n    const queryParameters = {};\n    const headerParameters = {};\n    headerParameters['Content-Type'] = 'application/json';\n    const response = await this.request({\n      path: `/object/{object_id}`.replace(`{${\"object_id\"}}`, encodeURIComponent(String(requestParameters.objectId))),\n      method: 'PUT',\n      headers: headerParameters,\n      query: queryParameters,\n      body: ObjectToJSON(requestParameters.object)\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => InformationFromJSON(jsonValue));\n  }\n  /**\n   * Edit Object\n   * Edit Object\n   */\n\n\n  async editObject(requestParameters, initOverrides) {\n    const response = await this.editObjectRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n  /**\n   * Get the Object object\n   * Get Object\n   */\n\n\n  async getObjectRaw(requestParameters, initOverrides) {\n    if (requestParameters.objectId === null || requestParameters.objectId === undefined) {\n      throw new runtime.RequiredError('objectId', 'Required parameter requestParameters.objectId was null or undefined when calling getObject.');\n    }\n\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/object/{object_Id}`.replace(`{${\"object_Id\"}}`, encodeURIComponent(String(requestParameters.objectId))),\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => ObjectFromJSON(jsonValue));\n  }\n  /**\n   * Get Object\n   * Get Object\n   */\n\n\n  async getObject(requestParameters, initOverrides) {\n    const response = await this.getObjectRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n  /**\n   * Get list of Objects\n   * Get Objects\n   */\n\n\n  async getObjectsRaw(initOverrides) {\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/object`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => jsonValue.map(ObjectFromJSON));\n  }\n  /**\n   * Get list of Ports\n   * Get ports\n   */\n\n\n  async getObjects(initOverrides) {\n    const response = await this.getObjectsRaw(initOverrides);\n    return await response.value();\n  }\n\n}","map":{"version":3,"names":["runtime","InformationFromJSON","ObjectFromJSON","ObjectToJSON","ObjectApi","BaseAPI","createObjectRaw","requestParameters","initOverrides","queryParameters","headerParameters","response","request","path","method","mode","headers","query","body","object","JSONApiResponse","jsonValue","createObject","value","deleteObjectRaw","objectId","undefined","RequiredError","replace","encodeURIComponent","String","deleteObject","editObjectRaw","editObject","getObjectRaw","getObject","getObjectsRaw","map","getObjects"],"sources":["C:/Users/STW/OneDrive/Dokumenty/VSC/projekt na studia/frontend/src/apis/ObjectApi.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Tank Measurement API\n * API for config.json in tank_measurement\n *\n * The version of the OpenAPI document: 0.1.9\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    Information,\n    InformationFromJSON,\n    InformationToJSON,\n    Object,\n    ObjectFromJSON,\n    ObjectToJSON,\n} from '../models';\n\nexport interface CreateObjectRequest {\n    object?: Object;\n}\n\nexport interface DeleteObjectRequest {\n    objectId: string;\n    object?: Object;\n}\n\nexport interface EditObjectRequest {\n    objectId: string;\n    object?: Object;\n}\n\nexport interface GetObjectRequest {\n    objectId: string;\n}\n\n/**\n * \n */\nexport class ObjectApi extends runtime.BaseAPI {\n\n    /**\n     * Create a Object \n     * Create Object\n     */\n    async createObjectRaw(requestParameters: CreateObjectRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Information>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/object`,\n            method: 'POST',\n            mode: 'cors',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ObjectToJSON(requestParameters.object),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => InformationFromJSON(jsonValue));\n    }\n\n    /**\n     * Create a Object \n     * Create Object\n     */\n    async createObject(requestParameters: CreateObjectRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Information> {\n        const response = await this.createObjectRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete Object \n     * Delete Object\n     */\n    async deleteObjectRaw(requestParameters: DeleteObjectRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Information>> {\n        if (requestParameters.objectId === null || requestParameters.objectId === undefined) {\n            throw new runtime.RequiredError('objectId','Required parameter requestParameters.objectId was null or undefined when calling deleteObject.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/object/{object_id}`.replace(`{${\"object_id\"}}`, encodeURIComponent(String(requestParameters.objectId))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ObjectToJSON(requestParameters.object),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => InformationFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete Object\n     * Delete Object\n     */\n    async deleteObject(requestParameters: DeleteObjectRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Information> {\n        const response = await this.deleteObjectRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Edit Object \n     * Edit Object\n     */\n    async editObjectRaw(requestParameters: EditObjectRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Information>> {\n        if (requestParameters.objectId === null || requestParameters.objectId === undefined) {\n            throw new runtime.RequiredError('objectId','Required parameter requestParameters.objectId was null or undefined when calling editObject.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/object/{object_id}`.replace(`{${\"object_id\"}}`, encodeURIComponent(String(requestParameters.objectId))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ObjectToJSON(requestParameters.object),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => InformationFromJSON(jsonValue));\n    }\n\n    /**\n     * Edit Object\n     * Edit Object\n     */\n    async editObject(requestParameters: EditObjectRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Information> {\n        const response = await this.editObjectRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get the Object object\n     * Get Object\n     */\n    async getObjectRaw(requestParameters: GetObjectRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Object>> {\n        if (requestParameters.objectId === null || requestParameters.objectId === undefined) {\n            throw new runtime.RequiredError('objectId','Required parameter requestParameters.objectId was null or undefined when calling getObject.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/object/{object_Id}`.replace(`{${\"object_Id\"}}`, encodeURIComponent(String(requestParameters.objectId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ObjectFromJSON(jsonValue));\n    }\n\n    /**\n     * Get Object\n     * Get Object\n     */\n    async getObject(requestParameters: GetObjectRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Object> {\n        const response = await this.getObjectRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get list of Objects\n     * Get Objects\n     */\n    async getObjectsRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Array<Object>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/object`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ObjectFromJSON));\n    }\n\n    /**\n     * Get list of Ports\n     * Get ports\n     */\n    async getObjects(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Array<Object>> {\n        const response = await this.getObjectsRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}